"""Base

Revision ID: 9a63c550252b
Revises: 
Create Date: 2025-03-21 11:56:46.723170

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision: str = '9a63c550252b'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Rules',
    sa.Column('Name', sa.TEXT(), nullable=True),
    sa.Column('Description', sa.TEXT(), nullable=True),
    sa.Column('Table', sa.TEXT(), nullable=True),
    sa.Column('Enabled', sa.Boolean(), nullable=True),
    sa.Column('RuleID', sa.Integer(), nullable=False),
    sa.Column('Trigger', sa.TEXT(), nullable=True),
    sa.PrimaryKeyConstraint('RuleID')
    )
    op.create_table('Selectors',
    sa.Column('SID', sa.Integer(), nullable=False),
    sa.Column('Table', sa.TEXT(), nullable=True),
    sa.Column('Target', sa.TEXT(), nullable=True),
    sa.Column('Aggregator', sa.TEXT(), nullable=True),
    sa.Column('Type', sa.TEXT(), nullable=True),
    sa.PrimaryKeyConstraint('SID')
    )
    op.create_table('budget',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=40), nullable=False),
    sa.Column('funding_source', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('start_date', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('end_date', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('full_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('hashed_password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_table('Conditions',
    sa.Column('CID', sa.Integer(), nullable=False),
    sa.Column('LeftSID', sa.Integer(), nullable=False),
    sa.Column('Operator', sa.TEXT(), nullable=True),
    sa.Column('RightSID', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['LeftSID'], ['Selectors.SID'], ),
    sa.ForeignKeyConstraint(['RightSID'], ['Selectors.SID'], ),
    sa.PrimaryKeyConstraint('CID')
    )
    op.create_table('Actions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('RuleID', sa.Integer(), nullable=False),
    sa.Column('CID', sa.Integer(), nullable=False),
    sa.Column('Conjunction', sa.TEXT(), nullable=True),
    sa.ForeignKeyConstraint(['CID'], ['Conditions.CID'], ),
    sa.ForeignKeyConstraint(['RuleID'], ['Rules.RuleID'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('Actions')
    op.drop_table('Conditions')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_table('budget')
    op.drop_table('Selectors')
    op.drop_table('Rules')
    # ### end Alembic commands ###
