"""rules schema

Revision ID: b24e809c2770
Revises: 9a2277af9f8e
Create Date: 2025-03-17 12:38:29.343485

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision: str = 'b24e809c2770'
down_revision: Union[str, None] = '9a2277af9f8e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute('CREATE SCHEMA rules')
    op.create_table('rules',
    sa.Column('RuleID', sa.Integer(), nullable=False),
    sa.Column('Name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('Description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('Trigger', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('Table', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('RuleID'),
    schema='rules'
    )
    op.drop_table('rules')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('rules',
    sa.Column('RuleID', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('Name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('Description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Trigger', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('Table', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('RuleID', name='rules_pkey')
    )
    op.drop_table('rules', schema='rules')
    op.execute('DROP SCHEMA rules')
    # ### end Alembic commands ###
