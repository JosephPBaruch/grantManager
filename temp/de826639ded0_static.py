"""Static

Revision ID: de826639ded0
Revises: 48ef14ee7ab8
Create Date: 2025-03-18 12:44:21.775234

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "de826639ded0"
down_revision: Union[str, None] = "48ef14ee7ab8"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "Rules",
        sa.Column("Name", sa.TEXT(), nullable=True),
        sa.Column("Description", sa.TEXT(), nullable=True),
        sa.Column("Table", sa.TEXT(), nullable=True),
        sa.Column("Enabled", sa.Boolean(), nullable=True),
        sa.Column("RuleID", sa.Integer(), nullable=False),
        sa.Column("Trigger", sa.TEXT(), nullable=True),
        sa.PrimaryKeyConstraint("RuleID"),
    )
    op.drop_constraint("Actions_RuleID_fkey", "Actions", type_="foreignkey")
    op.create_foreign_key(None, "Actions", "Rules", ["RuleID"], ["RuleID"])
    op.drop_table("Rule")

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "Actions", type_="foreignkey")
    op.create_table(
        "Rule",
        sa.Column("RuleID", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("Name", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("Description", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("Trigger", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("Table", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("Enabled", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("RuleID", name="Rule_pkey"),
    )
    op.create_foreign_key(
        "Actions_RuleID_fkey", "Actions", "Rule", ["RuleID"], ["RuleID"]
    )
    op.drop_table("Rules")
    # ### end Alembic commands ###
